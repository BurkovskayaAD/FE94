"use strict";

// NORMAL level
// Task 1 üñ•
// –í—ã–≤–µ–¥–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –≤ –∫–æ–Ω—Å–æ–ª—å —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ forEach

//     const fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987]
// –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è function declaration & arrow function

// ******** SOLVE *************************************************

const fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987]

// //  1 –°–ü–û–°–û–ë ,–∏—Å–ø–æ–ª—å–∑—É—è function declaration

fibonacci.forEach((el)=>console.log(el));

// //  2 –°–ü–û–°–û–ë ,–∏—Å–ø–æ–ª—å–∑—É—è arrow function

// let eachElement=()=>{fibonacci.forEach((el)=>console.log(el));
// }
// eachElement();

// Task 2 üñ•
// –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ map —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞—Å—Å–∏–≤–∞ users, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞:

// ******** SOLVE *************************************************

// ['member 1: Darya', 'member 2: Masha', ... etc]

// ******** SOLVE *************************************************

// const users = ['Darya', 'Masha', 'Denis', 'Vitaliy', 'Polina', 'Anton']

// //  1 –°–ü–û–°–û–ë ,–∏—Å–ø–æ–ª—å–∑—É—è function declaration

// let addMassive=users.map((el, index)=>`member ${index+1}:${el} `);
// console.log(addMassive);

// //  2 –°–ü–û–°–û–ë ,–∏—Å–ø–æ–ª—å–∑—É—è arrow function

// let addMassive=()=>users.map((el, index)=>`member ${index+1}:${el} `);
// console.log(addMassive());

// –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è function declaration & arrow function.

// Task 3 üñ•
// –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ filter —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ –±—É–¥–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª.

// ******** SOLVE *************************************************

//     const numbers = [7, -4, 32, -90, 54, 32, -21]
// // –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è function declaration & arrow function.
//  //  1 –°–ü–û–°–û–ë ,–∏—Å–ø–æ–ª—å–∑—É—è function declaration

// //  let positiveNum=numbers.filter((el)=>el>0)
// //  console.log(positiveNum);

// // //  2 –°–ü–û–°–û–ë ,–∏—Å–ø–æ–ª—å–∑—É—è arrow function
// let positiveNum=()=>numbers.filter((el)=>el>0)
// console.log(positiveNum());

// Task 4 üñ•
// –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ reduce –ø–æ–ª—É—á–∏—Ç–µ —Å—É–º–º—É –≤—Å–µ—Ö —á–∏—Å–µ–ª –º–∞—Å—Å–∏–≤–∞.

// ******** SOLVE *************************************************

// const fibonacci = [
//   0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987,
// ];

// –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è function declaration & arrow function.
//    1 –°–ü–û–°–û–ë ,–∏—Å–ø–æ–ª—å–∑—É—è function declaration

// const value=fibonacci.reduce((accum, value, index, array)=>accum +=value);
// console.log(value);

//  2 –°–ü–û–°–û–ë ,–∏—Å–ø–æ–ª—å–∑—É—è arrow function
// const value=()=>fibonacci.reduce((accum, el)=> accum +=el);
// console.log(value());

// Task 5 üñ•
// –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ find –Ω–∞–π–¥–∏—Ç–µ –≤ –º–∞—Å—Å–∏–≤–µ –ø–µ—Ä–≤–æ–µ —á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ.

// ******** SOLVE *************************************************

// const numbers = [5, 9, 13, 24, 54, 10, 13, 99, 1, 5];
// // –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è function declaration & arrow function.
// //    1 –°–ü–û–°–û–ë ,–∏—Å–ø–æ–ª—å–∑—É—è function declaration

// let evenNumber = numbers.find((el) => el % 2 == 0);
// console.log(evenNumber);
// //  2 –°–ü–û–°–û–ë ,–∏—Å–ø–æ–ª—å–∑—É—è arrow function

// // let evenNumber = () => numbers.find((el) => el % 2 === 0);
// // console.log(evenNumber());

// ADVANCED level
// Task 1 üë®‚Äçüè´
// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Student

// –í –∫–∞–∂–¥–æ–º –æ–±—ä–µ–∫—Ç–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª—è salary , rate , name
// –í–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–∞ —Ç–∞–∫–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–∞.

// ***** SOLVE **************

// function Student(salary, rate, name) {
//   this.salary = salary;
//   this.rate = rate;
//   this.name = name;

//   this.sum = function () {
//     rate =
//       rate == "A"
//         ? 12
//         : rate == "B"
//         ? 9
//         : rate == "C"
//         ? 6
//         : rate == "D"
//         ? 0
//         : "–Ω–µ –ø–æ–ª–æ–∂–µ–Ω –∫—Ä–µ–¥–∏—Ç";

//     let sum = salary * rate;
//     console.log(sum);
//     return sum;
//   };
// }

// // –ù–∞ –æ—Å–Ω–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—Ç—å –º–∏–Ω–∏–º—É–º 5 —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –∏–º—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∏–º–µ–Ω–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã.

// let student1 = new Student(1000, "A", "Vital");
// let student2 = new Student(1000, "B", "Kirill");
// let student3 = new Student(1000, "C", "Andrei");
// let student4 = new Student(1000, "D", "Kate");
// let student5 = new Student(1000, "A", "Nastya");

// // console.log(student2.sum());

// // –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ students –∏ –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤ –Ω–µ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.

// let students = [student1, student2, student3, student4, student5];

// // –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. –ò –≤—ã—á–∏—Å–ª—è–µ—Ç –æ–±—â—É—é —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–æ–≤ –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –≤—ã–¥–∞—Ç—å –≥—Ä—É–ø–ø–µ.

// let allCredit = 0;
// function getAverageSum(arr) {
//   for (let i = 0; i <= arr.length - 1; i++) {
//     allCredit += arr[i].sum();
//   }
//   return allCredit;
// }

// console.log(getAverageSum(students));

// rate –∏–º–µ–µ—Ç 4 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ A B C D

// A - –æ—Ç–ª–∏—á–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º—ã –º–æ–∂–µ–º –¥–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –∫—Ä–µ–¥–∏—Ç –∫–∞–∫ 12 –µ–≥–æ –∑–∞—Ä–ø–ª–∞—Ç
// B - —Ö–æ—Ä–æ—à–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º—ã –º–æ–∂–µ–º –¥–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –∫—Ä–µ–¥–∏—Ç –∫–∞–∫ 9 –µ–≥–æ –∑–∞—Ä–ø–ª–∞—Ç
// C - –Ω–µ–ø–ª–æ—Ö–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º—ã –º–æ–∂–µ–º –¥–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –∫—Ä–µ–¥–∏—Ç –∫–∞–∫ 6 –µ–≥–æ –∑–∞—Ä–ø–ª–∞—Ç
// D - –ø–ª–æ—Ö–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º—ã –Ω–µ –º–æ–∂–µ–º –¥–∞—Ç—å –∫—Ä–µ–¥–∏—Ç

// Task 2 üë®‚Äçüè´ –¢—Ä–æ–ª–ª–∏ –∞—Ç–∞–∫—É—é—Ç –Ω–∞—à —Ä–∞–∑–¥–µ–ª —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏!!!
// –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —ç—Ç–æ–π —Å–∏—Ç—É–∞—Ü–∏–µ–π - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –≥–ª–∞—Å–Ω—ã–µ –∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —Ç—Ä–æ–ª–ª–µ–π, –Ω–µ–π—Ç—Ä–∞–ª–∏–∑—É—è —É–≥—Ä–æ–∑—É.
// –í–∞—à–∞ –∑–∞–¥–∞—á–∞ - –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º–∏ –≥–ª–∞—Å–Ω—ã–º–∏.
// –ù–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–æ–∫–∞ ¬´This website is for losers LOL!¬ª —Å—Ç–∞–Ω–µ—Ç "Ths wbst s fr lsrs LL!".
// –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –¥–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ y –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –≥–ª–∞—Å–Ω–æ–π.

// ******** SOLVE *************************************************

// let str = prompt("–Ω–∞–ø–∏—à–∏ —Å—Ç—Ä–æ–∫—É");
// let withoutVocal ='';

// function regular(a) {
//   for (let i = 0; i <= a.length - 1; i++) {
//     let lowerStr = a.toLowerCase();
//     if (
//       !/a/.test(lowerStr[i]) &&
//       !/e/.test(lowerStr[i]) &&
//       !/i/.test(lowerStr[i]) &&
//       !/o/.test(lowerStr[i]) &&
//       !/u/.test(lowerStr[i])
//     ) {
//       withoutVocal +=a[i];
//       console.log(withoutVocal);
//     }
//   }
// }
// console.log(regular(str));

// Task 3 üë®‚Äçüè´ –ù–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏, –Ω–µ—Ç —Ç–µ–æ—Ä–∏–∏
// –í –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ –ø—Ä–∏–º–µ—Ä–∞—Ö –ø–æ–∫–∞–∑–∞–Ω–æ, –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é:

//     accum("abcd") -> "A-Bb-Ccc-Dddd"
//     accum("RqaEzty") -> "R-Qq-Aaa-Eeee-Zzzzz-Tttttt-Yyyyyyy"
//     accum("cwAt") -> "C-Ww-Aaa-Tttt"

// –ü–∞—Ä–∞–º–µ—Ç—Ä - —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –≤–∫–ª—é—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –æ—Ç a..z –∏ A..Z.

// ******** SOLVE *************************************************

// let accum = "abcd";

// let xTransf = [];

// function transformStr(str) {
//   let x = str.toUpperCase().split("");
//   for (let i = 0; i <= x.length - 1; i++) {
//     xTransf.push(x[i] + x[i].toLowerCase().repeat(i));
//     let shifr = xTransf.join("-");
//     console.log(shifr);
//   }
// }
// console.log(transformStr(accum));

// Task 4 üë®‚Äçüè´ –ò–∑–æ–≥—Ä–∞–º–º—ã
// –ò–∑–æ–≥—Ä–∞–º–º–∞ - —ç—Ç–æ —Å–ª–æ–≤–æ, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –±—É–∫–≤, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∏–ª–∏ –Ω–µ–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö. –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, –∏–∑–æ–≥—Ä–∞–º–º–æ–π. –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –∏–∑–æ–≥—Ä–∞–º–º–æ–π. –†–µ–≥–∏—Å—Ç—Ä –±—É–∫–≤ –º—ã –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º.
//     isIsogram("Dermatoglyphics") == true
//     isIsogram("aba") == false
//     isIsogram("moOse") == false // -- ignore letter case

// ******** SOLVE *************************************************

// function checkIsogramm(stroka) {
//    let str=stroka.toLowerCase()
//   let obj = {};
//   for (let i = 0; i < str.length; i++) {
//     if (obj[str[i]]) return false;
//     obj[str[i]] = 1;
//     // console.log(obj);
//   }
//   return true;
// }

// console.log("abc", checkIsogramm("abc"));
// console.log("aAbc", checkIsogramm("aAbc"));
// console.log("abcda", checkIsogramm("abccda"));
