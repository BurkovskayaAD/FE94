Напишите функцию, которая принимает строку и возвращает символ, 
который встречается в ней чаще всего. Если таких символов несколько, 
функция должна возвращать строку из этих символов.

######

Напишите функцию, которая заменяет все повторяющиеся символы в строке на 
звёздочки. Например, строка "я учусь программированию" должна преобразоваться 
в "я уч*сь прог*ам*и**в*н*ю".

######

Напишите функцию counterFactory(start, step), которая при вызове
возвращает другую функцию – счётчик tictoc(). start – стартовое значение
счётчика, step – его шаг. При каждом вызове tictoc увеличивает
значение счётчика на step.

######

Напишите функцию take(tictoc, x), которая вызывает функцию 
tictoc заданное число (x) раз и возвращает массив с результатами вызовов.

######

Разбейте текст этой задачи на отдельные слова,
удаляя по пути точки и запятые, 
а полученные слова сложите в массив. 

Напишите функцию, которая возвращает массив из тех же слов, но развёрнутых задом наперёд, 
причём массив должен быть отсортирован по количеству букв в слове. 

Напишите другую функцию, которая считает общее количество букв с во всех элементах массива.

######

Для следующих задач используйте файл https://github.com/AdukarIT/_Tasks_/blob/master/src/uscities.js.

1. Отфильтруйте массив городов так, чтобы в нём остались только города из штата Калифорния, 
которые с 2000 по 2013 выросли в населении.

2. Подсчитайте, сколько миллионов населения живёт во всех городах на широте от 25 до 30 градусов.

3. Создайте массив только из тех городов, которые начинаются на букву D, при этом отсортируйте 
элементы этого массива по названию города.

######

Напишите стрелочную функцию, которая принимает строку и возвращает количество гласных в заданной строке.
Мы будем учитывать буквы a, e, i, o, u как гласные (y не в счет).
Входная строка будет состоять только из строчных букв.

######

Напишите стрелочную функцию, которая принимает число, а возвращает число, в котором
каждая цифра возведена в квадрат и соединена.
Например, если мы пропустим через функцию 9119, получится 811181, потому что 9^2 равно 81, а 1^2 равно 1.

######

Написать стрелочную функцию, которая может принимать любое неотрицательное целое число в качестве аргумента 
и возвращать его с цифрами в порядке убывания. По сути, переставьте цифры, 
чтобы получить максимально возможное число.

Вход: 42145 Выход:54421
Вход: 145263 Выход:654321
Вход: 123456789 Выход:987654321

######

Учитывая целое число, определите, является ли оно квадратным числом. Написать стрелочную функцию isSquare.

isSquare (-1) // => false
isSquare   3  // => false
isSquare   4  // => true
isSquare  25  // => true
isSquare  26  // => false

######

В этой задаче  вы создадите функцию, которая берет массив неотрицательных целых чисел и строк 
и возвращает новый массив с отфильтрованными строками.

filterList([1,2,'a','b']) == [1,2]
filterList([1,'a','b',0,15]) == [1,0,15]
filterList([1,2,'aasf','1','123',123]) == [1,2,123]
