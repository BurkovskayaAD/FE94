'use strict';
// Напишите функцию, которая принимает массив строк в качестве аргумента и возвращает
// отсортированный массив, содержащий те же строки, упорядоченные от самой короткой до самой длинной.

// Например, если этот массив был передан в качестве аргумента:
// ["Telescopes", "Glasses", "Eyes", "Monocles"]

// Ваша функция вернет следующий массив:
// ["Eyes", "Glasses", "Monocles", "Telescopes"]

// Все строки в массиве, переданном вашей функции, будут иметь разную длину, поэтому вам не
// придется решать, как упорядочить несколько строк одинаковой длины.

// *************************** SOLVE ***********************************

let arr = ["Telescopes", "Glasses", "Eyes", "Monocles"];

function sortLength(arr) {
  for (let i = 0; i <= arr.length; i++) {
    for (let j = 0; j < arr.length - 1; j++) {
      if (arr[j] > arr[j + 1]) {
        let tmp = arr[j];
        console.log(tmp)
        arr[j] = arr[j + 1];
        console.log(arr[j])
        arr[j + 1] = tmp;
      }
    }
  }
  return console.log(arr);
}
sortLength(arr);

// ######

// Создайте функцию, которая при наличии триплета возвращает индекс числового элемента,
// лежащего между двумя другими элементами.
// Входными данными для функции будет массив из трех различных чисел.
// gimme([2, 3, 1]) => 0
// 2 — это число, которое помещается между 1 и 3 , а индекс 2 во входном массиве равен 0 .
// gimme([5, 10, 14]) => 1
// 10 — это число, которое находится между 5 и 14 , а индекс 10 во входном массиве равен 1 .

// *************************** SOLVE ***********************************
// 1 СПОСОБ (корявое решение):

// let gimme = [5, 10, 14];
// let newGimme=gimme.slice();//создаю копию моего иассива
// // newGimme[0]=89;
// // console.log(newGimme);
// // console.log(gimme);

// let min = 0;
// let aver=0;
// function getAverage(arr) {
//   for (let i = 0; i <= arr.length; i++) {
//     if (arr[i] < arr[i + 1]) {
//       min = arr[i];    //находим самое маленькое число
//       arr.splice(arr[i-1], 1); //удаляем это маленькое число из массива, и останется среднее и самое большое
//       console.log(min);
//       console.log(arr);
//     }
//   }
//   for (let i = 0; i <= arr.length; i++) {
//     if (arr[i] < arr[i + 1]) {  //теперь находим искомое число в массиве из двух чисел (самого большого и искомого, сравнивая их)
//       aver=arr[i];
//       console.log(aver);
//     }
//   }
//   return aver
// }
// console.log(getAverage(newGimme));
// console.log(`Индекс искомого числа : ${gimme.indexOf(aver)}`);

// // ********** это второй способ решения , тоже корявый, по-другому не получается ******************************************************
// // 2 СПОСОБ:
// let gimme = [25, 10, 14];
// let one=gimme[0];
// let two=gimme[1];
// let three=gimme[2];
// // console.log(gimme[0]);
// let poisk=(one>two && one>three)?one:
// (two>one && two>three)?two:
// (three>one && three>two)?three:
// 'как здорово, это максимальное число';
// console.log(`мы нашли максимальное число. это ${poisk}`);
// console.log(`${gimme.indexOf(poisk)}-этот индекс исключаем из дальнейшей выборки`);

// // найдем теперь искомое, убрав максимальное из выборки
// let average=(two>three)?two:three;
// console.log(`теперь мы нашли промежуточное число между тремя числами, это ${average}`);

// // /теперь найдем индекс искомого числа :
// console.log(gimme.indexOf(14));

// ######

// Учитывая целое число в качестве входных данных, можете ли вы округлить его до следующего
// (что означает «больше или равно»), кратного 5?

// Примеры:
// 0    ->   0
// 2    ->   5
// 3    ->   5
// 12   ->   15
// 21   ->   25
// 30   ->   30
// -2   ->   0
// -5   ->   -5

// *************************** SOLVE ***********************************

// let n = +prompt("введите число");
// function get(n) {
//   for (let i = n; ; i++) {
//     if (i % 5 == 0) {
//       return console.log(i);
//     }
//   }
// }
// get(n);

// console.log(i)
// let drob=n/100*5
// console.log(drob);

// let y=Math.ceil(drob)
// console.log(y);
// ######

// Напишите функцию, которая принимает одну строку ( word) в качестве аргумента.
// Функция должна возвращать массив, содержащий индексы всех заглавных букв в строке.

// ('CodEWaRs') ->  [0,3,4,6]
// *************************** SOLVE ***********************************

// let word = "CodEWaRs";
// let indexArr = [];

// function getIndexofLetters(str) {
//   for (let i = 0; i <= str.length; i++) {
//     if (str[i] == str[i].toUpperCase()) {
//       let index = str.indexOf(str[i]);
//       indexArr.push(index);
//       console.log(indexArr);
//     }
//   }
//   return indexArr;
// }
// getIndexofLetters(word);
