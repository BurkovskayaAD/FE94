Создайте массив и в цикле заполните его чётными числами от 2 до 20.

######

Преобразуйте массив из задачи 1 так, чтобы его элементы стали равны своему индексу, умноженному на 5.

######

Преобразуйте массив из задачи 2 так, чтобы его элементы расположились в обратном порядке.

######

Получите от пользователя три числа, создайте из них массив. 
Используя циклы, найдите наибольшее из чисел и разделите на него каждый элемент массива.

######

Создайте массив из чисел от 1 до 35. Вырежьте из него первые 10 элементов, а затем добавьте их в конец массива. 

######

Напишите функцию, удаляющую из массива все элементы, которые при приведении к типу Boolean дают false.

######

Используя встроенную функцию Math.random(), напишите собственную функцию getRandomArray(len), 
которая возвращает массив случайных чисел длиной len.
В следующих 4 задачах используйте массивы, созданные через этот метод

######

1. Напишите функцию, которая возвращает массив из элементов больше средне арифметического.

2. Напишите функцию, которая возвращает два наименьших числа.

3. Написать функцию, которая попарно сложит элементы двух массивов равной длины: первый массива 1 с последним массива 2, 
   второй массива 1 с предпоследним массива 2 и так далее. Верните массив с результатами сложения.

4. Напишите функцию, которая сортирует массив методом пузырька. О самом алгоритме можно почитать на википедии. 
   А ещё можно посмотреть, как его танцуют в Венгрии.
   https://ru.wikipedia.org/wiki/%D0%A1%D0%BE%D1%80%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0_%D0%BF%D1%83%D0%B7%D1%8B%D1%80%D1%8C%D0%BA%D0%BE%D0%BC
   https://www.youtube.com/watch?v=lyZQPjUT5B4

######

Верните новый массив, состоящий из элементов, кратных их собственному индексу во входном массиве (длина > 1).
Пример:
[22, -6, 32, 82, 9, 25] =>  [-6, 32, 25]
[68, -1, 1, -7, 10, 10] => [-1, 10]
[-56,-85,72,-26,-14,76,-27,72,35,-21,-67,87,0,21,59,27,-92,68] => [-85, 72, 0, 68]

######

Написать функцию, которая запрашивает у пользователя число n. Вернуть массив положительных нечетных чисел ниже n,

Примеры (ввод -> вывод)
7  -> [1, 3, 5] (because odd numbers below 7 are [1, 3, 5])
15 -> [1, 3, 5, 7, 9, 11, 13] (because odd numbers below 15 are [1, 3, 5, 7, 9, 11, 13])

######

Создайте два массива. Напишите функцию, которая будет их принимать. Возвращать фунция должна массив из элементов,
которые есть в обоих массивах.

######

Дан массив целых чисел, элементы которого имеют как отрицательное, так и положительное значение, 
за исключением одного целого числа, которое либо только отрицательное, либо только положительное. 
Ваша задача будет найти это целое число.

Примеры:

[1, -1, 2, -2, 3] => 3
3 не имеет пары

[-3, 1, 2, 3, -1, -4, -2] => -4
-4 не имеет пары