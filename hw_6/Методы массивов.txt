let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

console.log(arr[0]);//посмотреть первый элемент
arr[0] = 11;//перезаписать 1 элемент
console.log(arr);
console.log(arr.length);//длина массива
console.log(arr.pop()); //удаление последнего
console.log(arr);
arr.push(12);//добавить в конец
console.log(arr);
console.log(arr.shift());//удаление певого
console.log(arr);
arr.unshift(1);//добавить в начало
console.log(arr);

for(let i = 0; i < arr.length; i++) {
    console.log(arr[i])
}

for(let num of arr) {
    console.log(num)
}

let str = arr.join("--")//сделать строку из массива
console.log(str);

let newArr = str.split("--");//сделать массив из строки
console.log(newArr);

newArr = str.split("--", 3);//сделать массив из строки
console.log(newArr);

newArr = arr.slice(1, 4);//удалить часть массива
console.log(newArr);

let arr1 = ["Я", "изучаю", "JavaScript", "прямо", "сейчас"];
arr1.splice(0, 3, "Давай", "танцевать");//швейцарский ножик
console.log(arr1);

arr1.fill("js", 1, 3);//заменить элементы
console.log(arr1);

let arr2 = arr1.concat("Hanna");//копия элемента + что-то свое
console.log(arr2);

let mas1 = [1, 2, 3];
let mas2 = [12, 34, 21, 34];
let mas3 = mas1.concat(mas2);
console.log(mas3);

arr2.reverse();//перевернуть массив
console.log(arr2);

let arr3 = ["a", "b", "c", "d", "a", "s", "k"];
console.log(arr3.indexOf("a"));//поиск элементов
console.log(arr3.indexOf("a", 1));
console.log(arr3.indexOf("a", 5));
console.log(arr3.lastIndexOf("a"));//поиск с конца

arr3.sort();// сортировка
console.log(arr3);

let arrrr = [23, 45, 23, 6, 6, 656, 565, 99];
console.log(arrrr.sort());

console.log(arr3.includes("a"));//есть ли элемент в массиве

let arr4 = [1, 2, 1, 5];
arr4.forEach(function(item, index, array) {
  console.log(`${item} имеет позицию ${index} в ${array}`);
});
arr4.forEach((item, index, array) => {
  alert(`${item} имеет позицию ${index} в ${array}`);
});


let users = [
  {id: 1, name: "Вася"},
  {id: 2, name: "Петя"},
  {id: 3, name: "Маша"}
];
//поиск элемента
let user = users.find(item => item.id == 1);
console.log(user.name);

// возвращает массив, состоящий из двух первых пользователей
let someUsers = users.filter(item => item.id < 3);
console.log(someUsers.length);


//преобразование или перезапись массива
let vlastelinKolec = ["Bilbo", "Gandalf", "Nazgul"];
let lengths = vlastelinKolec.map(item => item.length);
console.log(lengths);


!!!
Шпаргалка по методам массива:

Для добавления/удаления элементов:

push (...items) – добавляет элементы в конец,
pop() – извлекает элемент с конца,
shift() – извлекает элемент с начала,
unshift(...items) – добавляет элементы в начало.
splice(pos, deleteCount, ...items) – начиная с индекса pos, удаляет deleteCount элементов и вставляет items.
slice(start, end) – создаёт новый массив, копируя в него элементы с позиции start до end (не включая end).
concat(...items) – возвращает новый массив: копирует все члены текущего массива и добавляет к нему items. 
Если какой-то из items является массивом, тогда берутся его элементы.
Для поиска среди элементов:

indexOf/lastIndexOf(item, pos) – ищет item, начиная с позиции pos, и возвращает его 
индекс или -1, если ничего не найдено.
includes(value) – возвращает true, если в массиве имеется элемент value, в противном случае false.
find/filter(func) – фильтрует элементы через функцию и отдаёт первое/все значения, 
при прохождении которых через функцию возвращается true.
findIndex похож на find, но возвращает индекс вместо значения.
Для перебора элементов:

forEach(func) – вызывает func для каждого элемента. Ничего не возвращает.
Для преобразования массива:

map(func) – создаёт новый массив из результатов вызова func для каждого элемента.
sort(func) – сортирует массив «на месте», а потом возвращает его.
reverse() – «на месте» меняет порядок следования элементов на противоположный и 
возвращает изменённый массив.
split/join – преобразует строку в массив и обратно.
reduce/reduceRight(func, initial) – вычисляет одно значение на основе всего массива, 
вызывая func для каждого элемента и передавая промежуточный результат между вызовами.